"use strict";function init(){scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(45,windowWidth/windowHeight,.1,1e3),camera.position.set(100,100,100),scene.add(camera),renderer=new THREE.WebGLRenderer({antialias:!0}),renderer.setSize(windowWidth,windowHeight),container=document.getElementById("lamab"),container.appendChild(renderer.domElement);var e=new THREE.PointLight(16777215);e.position.set(0,500,0),scene.add(e);var n=new THREE.AxisHelper(100);scene.add(n);var o="images/bg/",t=".png",a=[o+"dawnmountain-xpos"+t,o+"dawnmountain-xneg"+t,o+"dawnmountain-ypos"+t,o+"dawnmountain-yneg"+t,o+"dawnmountain-zpos"+t,o+"dawnmountain-zneg"+t],i=(new THREE.CubeTextureLoader).load(a);i.format=THREE.RGBFormat,i.mapping=THREE.CubeRefractionMapping;var r=new THREE.BoxGeometry(1e3,1e3,1e3),u=THREE.ShaderLib.cube,s=new THREE.ShaderMaterial({fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:u.uniforms,depthWrite:!1,side:THREE.BackSide});s.uniforms.tCube.value=i;var d=new THREE.Mesh(r,s);scene.add(d);var c=document.createElement("canvas");c.width=128,c.height=128;var w=c.getContext("2d"),m=new Image;m.onload=function(){w.drawImage(m,0,0)},m.src="images/svg-100.svg";var E=new THREE.MeshBasicMaterial({map:new THREE.Texture(c),transparent:!0});E.map.needsUpdate=!0;var M=new THREE.CubeGeometry(50,50,50),R=[E,new THREE.MeshStandardMaterial({color:255}),new THREE.MeshStandardMaterial({color:255}),new THREE.MeshStandardMaterial({color:255}),new THREE.MeshStandardMaterial({color:255}),new THREE.MeshStandardMaterial({color:255})],l=new THREE.MultiMaterial(R);cube1=new THREE.Mesh(M,l),scene.add(cube1),cube1.position.set(50,0,0),cube1.doubleSided=!0;var g=25,h=new THREE.BoxGeometry(g,g,g),v=new THREE.MeshBasicMaterial({color:16777215,wireframe:!1,envMap:i,refractionRatio:.85});cube=new THREE.Mesh(h,v),cube.position.set(0,0,0),scene.add(cube),window.addEventListener("resize",onWindowResize,!1),document.addEventListener("mousemove",onDocumentMouseMove,!1),document.addEventListener("mousedown",onDocumentMouseDown,!1),document.addEventListener("touchstart",onDocumentTouchStart,!1),document.addEventListener("touchmove",onDocumentTouchMove,!1)}function onWindowResize(){windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2,camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight)}function onDocumentMouseDown(e){e.preventDefault(),document.addEventListener("mouseup",onDocumentMouseUp,!1),document.addEventListener("mouseout",onDocumentMouseOut,!1),mouseXOnMouseDown=e.clientX-windowHalfX,mouseYOnMouseDown=e.clientY-windowHalfY,targetRotationOnMouseDown=targetRotation,targetRotationYOnMouseDown=targetRotationY}function onDocumentMouseMove(e){mouseX=.05*(e.clientX-windowHalfX),mouseY=.05*(e.clientY-windowHalfY),targetRotation=targetRotationOnMouseDown+.02*(mouseX-mouseXOnMouseDown),targetRotationY=targetRotationYOnMouseDown+.02*(mouseY-mouseYOnMouseDown)}function onDocumentMouseUp(e){document.removeEventListener("mouseup",onDocumentMouseUp,!1),document.removeEventListener("mouseout",onDocumentMouseOut,!1)}function onDocumentMouseOut(e){document.removeEventListener("mouseup",onDocumentMouseUp,!1),document.removeEventListener("mouseout",onDocumentMouseOut,!1)}function onDocumentTouchStart(e){e.preventDefault(),e.clientX=e.touches[0].clientX,e.clientY=e.touches[0].clientY,onDocumentMouseDown(e)}function onDocumentTouchMove(e){1===e.touches.length&&(e.preventDefault(),mouseX=.2*(e.touches[0].pageX-windowHalfX),mouseY=.2*(e.touches[0].pageY-windowHalfY),targetRotation=targetRotationOnMouseDown+.2*(mouseX-mouseXOnMouseDown),targetRotationY=targetRotationYOnMouseDown+.2*(mouseY-mouseYOnMouseDown))}function animate(){requestAnimationFrame(animate),render(),camera.position.x+=.05*(mouseX/2-camera.position.x),camera.position.y+=.05*(-mouseY/2-camera.position.y)}function render(){renderer.render(scene,camera),cube.rotation.x+=.05,cube.rotation.y+=.05,cube1.rotation.x+=.05,cube1.rotation.y+=.05,cube.rotation.y+=.005*(targetRotationY-cube.rotation.y),cube.rotation.x+=.005*(targetRotation-cube.rotation.x),cube1.rotation.y+=.005*(targetRotationY-cube1.rotation.y),cube1.rotation.x+=.005*(targetRotation-cube1.rotation.x)}var container,scene,camera,renderer,controls,stats,cube,cube1,targetRotation=0,targetRotationOnMouseDown=0,targetRotationY=0,targetRotationYOnMouseDown=0,mouseX=0,mouseY=0,mouseXOnMouseDown=0,mouseYOnMouseDown=0,windowWidth=window.innerWidth,windowHeight=window.innerHeight,windowHalfX=window.innerWidth/2,windowHalfY=window.innerHeight/2,scene2,renderer2,div,element;init(),animate(),window.addEventListener("resize",onWindowResize,!1);